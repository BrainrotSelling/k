// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram
async function sendOrder(nickname, userMessage) {
    const button = document.querySelector('#orderForm button[type="submit"]');
    const originalText = button.innerHTML;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
    button.disabled = true;
    
    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        const total = selectedItems.reduce((sum, item) => sum + item.price, 0);
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ë–†–ï–ô–ù–†–û–¢–û–í%0A%0A`;
        message += `üë§ –ù–∏–∫–Ω–µ–π–º: ${encodeURIComponent(nickname)}%0A%0A`;
        
        message += `üì¶ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –±—Ä–µ–π–Ω—Ä–æ—Ç—ã:%0A`;
        selectedItems.forEach(item => {
            message += `‚Ä¢ ${encodeURIComponent(item.name)} - ${item.price} Robux%0A`;
        });
        
        message += `%0Aüí∞ –ò—Ç–æ–≥–æ: ${total} Robux%0A`;
        
        if (userMessage) {
            message += `%0Aüìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${encodeURIComponent(userMessage)}%0A`;
        }
        
        message += `%0A‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Telegram API
        const url = `https://api.telegram.org/bot8332292030:AAE05VXZVX6cbxQKNQAS_4Zg7rfnZc8MMqU/sendMessage?chat_id=7474847646&text=${message}`;
        
        const response = await fetch(url);
        
        if (response.ok) {
            const data = await response.json();
            
            if (data.ok) {
                showAlert('‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ Roblox', 'success');
                resetForm();
            } else {
                console.error('–û—à–∏–±–∫–∞ Telegram:', data);
                showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
            }
        } else {
            console.error('–û—à–∏–±–∫–∞ HTTP:', response.status);
            showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        button.innerHTML = originalText;
        button.disabled = false;
    }
}
