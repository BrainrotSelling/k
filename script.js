// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = '8332292030:AAE05VXZVX6cbxQKNQAS_4Zg7rfnZc8MMqU';
const TELEGRAM_CHAT_ID = '7474847646';

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
let selectedItems = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

function initializeApp() {
    setupItemSelection();
    setupFormHandler();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
function setupItemSelection() {
    const items = document.querySelectorAll('.item-card');
    
    items.forEach(item => {
        item.addEventListener('click', function() {
            this.classList.toggle('selected');
            updateSelection();
        });
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
function updateSelection() {
    selectedItems = [];
    const selectedCards = document.querySelectorAll('.item-card.selected');
    const selectedContainer = document.getElementById('selectedItems');
    let noSelection = document.getElementById('noSelection');
    const totalElement = document.getElementById('totalPrice');
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    selectedCards.forEach(card => {
        selectedItems.push({
            name: card.dataset.name,
            price: parseInt(card.dataset.price)
        });
    });
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ selected-item —ç–ª–µ–º–µ–Ω—Ç—ã
    selectedContainer.querySelectorAll('.selected-item').forEach(item => item.remove());
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (selectedItems.length > 0) {
        // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ"
        if (noSelection) {
            noSelection.style.display = 'none';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä
        selectedItems.forEach(item => {
            const itemDiv = document.createElement('div');
            itemDiv.className = 'selected-item';
            itemDiv.innerHTML = `
                <span>${item.name}</span>
                <span class="price">${item.price} —Ä–æ–±—É–∫—Å–æ–≤</span>
            `;
            selectedContainer.appendChild(itemDiv);
        });
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ"
        if (!noSelection) {
            noSelection = document.createElement('p');
            noSelection.id = 'noSelection';
            noSelection.textContent = '–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ';
            selectedContainer.appendChild(noSelection);
        }
        noSelection.style.display = 'block';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
    const total = selectedItems.reduce((sum, item) => sum + item.price, 0);
    totalElement.innerHTML = `<i class="fas fa-receipt"></i> –ò—Ç–æ–≥–æ: ${total} —Ä–æ–±—É–∫—Å–æ–≤`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã
    if (total > 0) {
        totalElement.classList.add('pulse');
    } else {
        totalElement.classList.remove('pulse');
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ñ–æ—Ä–º—ã
function setupFormHandler() {
    const form = document.getElementById('orderForm');
    
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const nickname = document.getElementById('nickname').value.trim();
        const message = document.getElementById('message').value.trim();
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!nickname) {
            showAlert('‚ùå –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º!', 'error');
            return;
        }
        
        if (selectedItems.length === 0) {
            showAlert('‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –±—Ä–µ–π–Ω—Ä–æ—Ç!', 'error');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
        await sendOrder(nickname, message);
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram
async function sendOrder(nickname, userMessage) {
    const button = document.querySelector('#orderForm button[type="submit"]');
    const originalText = button.innerHTML;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
    button.disabled = true;
    
    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        const total = selectedItems.reduce((sum, item) => sum + item.price, 0);
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ë–†–ï–ô–ù–†–û–¢–û–í%0A%0A`;
        message += `üë§ –ù–∏–∫–Ω–µ–π–º: ${encodeURIComponent(nickname)}%0A%0A`;
        
        message += `üì¶ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –±—Ä–µ–π–Ω—Ä–æ—Ç—ã:%0A`;
        selectedItems.forEach(item => {
            message += `‚Ä¢ ${encodeURIComponent(item.name)} - ${item.price} Robux%0A`;
        });
        
        message += `%0Aüí∞ –ò—Ç–æ–≥–æ: ${total} Robux%0A`;
        
        if (userMessage) {
            message += `%0Aüìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${encodeURIComponent(userMessage)}%0A`;
        }
        
        message += `%0A‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Telegram API
        const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${TELEGRAM_CHAT_ID}&text=${message}`;
        
        const response = await fetch(url);
        
        if (response.ok) {
            const data = await response.json();
            
            if (data.ok) {
                showAlert('‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ Roblox', 'success');
                resetForm();
            } else {
                console.error('–û—à–∏–±–∫–∞ Telegram:', data);
                showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
            }
        } else {
            console.error('–û—à–∏–±–∫–∞ HTTP:', response.status);
            showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', 'error');
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        button.innerHTML = originalText;
        button.disabled = false;
    }
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
function resetForm() {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('orderForm').reset();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    document.querySelectorAll('.item-card.selected').forEach(card => {
        card.classList.remove('selected');
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateSelection();
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(message, type) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    document.querySelectorAll('.alert').forEach(alert => alert.remove());
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const alert = document.createElement('div');
    alert.className = `alert alert-${type}`;
    alert.innerHTML = `
        <span>${message}</span>
        <button onclick="this.parentElement.remove()">√ó</button>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    if (type === 'success') {
        alert.style.backgroundColor = '#4CAF50';
    } else {
        alert.style.backgroundColor = '#f44336';
    }
    
    document.body.appendChild(alert);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (alert.parentElement) {
            alert.remove();
        }
    }, 5000);
}
